version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: claude-web-postgres
    environment:
      POSTGRES_USER: claude_web
      POSTGRES_PASSWORD: your-secure-password
      POSTGRES_DB: claude_web
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U claude_web"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: claude-web-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: claude-web-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://claude_web:your-secure-password@postgres:5432/claude_web
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-change-in-production}
      CLAUDE_PATH: /usr/local/bin/claude
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - claude_data:/app/data
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: claude-web-frontend
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

  code-server:
    image: codercom/code-server:latest
    container_name: claude-web-code-server
    environment:
      PASSWORD: your-code-server-password
    volumes:
      - code_server_data:/home/coder
      - claude_data:/workspace
    ports:
      - "8080:8080"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: claude-web-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
      - code-server
    restart: unless-stopped

  ttyd:
    image: tsl0922/ttyd:alpine
    container_name: claude-web-ttyd
    command: ["ttyd", "-p", "7681", "-i", "lo", "bash"]
    ports:
      - "7681:7681"
    volumes:
      - claude_data:/workspace
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  claude_data:
  code_server_data: